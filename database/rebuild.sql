CREATE TYPE public.account_type AS ENUM
    ('Client', 'Employee', 'Admin');

ALTER TYPE public.account_type
    OWNER TO demo910;

-- Table structure for table `classification`
CREATE TABLE public.classification (
  classification_id INT GENERATED BY DEFAULT AS IDENTITY,
  classification_name CHARACTER VARYING NOT NULL,
  CONSTRAINT classification_pk PRIMARY KEY (classification_id)
);

-- Table structure for table `inventory`
CREATE TABLE IF NOT EXISTS public.inventory
(
    inv_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    inv_make character varying NOT NULL,
    inv_model character varying NOT NULL,
    inv_year character(4) NOT NULL,
    inv_description text NOT NULL,
    inv_image character varying NOT NULL,
    inv_thumbnail character varying NOT NULL,
    inv_price numeric(9, 0) NOT NULL,
    inv_miles integer NOT NULL,
    inv_color character varying NOT NULL,
    classification_id integer NOT NULL,
    CONSTRAINT inventory_pkey PRIMARY KEY (inv_id)
);

-- Create relationship between `classification` and `inventory` tables
ALTER TABLE IF EXISTS public.inventory
    ADD CONSTRAINT fk_classification FOREIGN KEY (classification_id)
    REFERENCES public.classification (classification_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE NO ACTION;

-- Table structure for table `account`
CREATE TABLE IF NOT EXISTS public.account
(
    account_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    account_firstname character varying NOT NULL,
    account_lastname character varying NOT NULL,
    account_email character varying NOT NULL,
    account_password character varying NOT NULL,
    account_type account_type NOT NULL DEFAULT 'Client'::account_type,
    CONSTRAINT account_pkey PRIMARY KEY (account_id)
);

-- Data for table `classification`
INSERT INTO public.classification (classification_name)
VALUES ('Custom'),
       ('Sport'),
       ('SUV'),
       ('Truck'),
       ('Sedan');

UPDATE public.inventory
SET inv_description = REPLACE(inv_description, 'small interiors', 'a huge interior')
WHERE inv_make = 'GM' AND inv_model = 'Hummer';

UPDATE public.inventory
SET 
  inv_image = REPLACE(inv_image, '/images/', '/images/vehicles/'),
  inv_thumbnail = REPLACE(inv_thumbnail, '/images/', '/images/vehicles/');


INSERT INTO public.inventory (
  inv_make, inv_model, inv_year, inv_description,
  inv_image, inv_thumbnail, inv_price, inv_miles,
  inv_color, classification_id
) VALUES
('Lamborghini', 'Aventador', '2021', 'A powerful luxury supercar.', 
 '/images/vehicles/aventador.jpg', '/images/vehicles/aventador-tn.jpg',
 450000, 800, 'Yellow', 1),

('Chevrolet', 'Camaro', '2020', 'High-performance muscle car.', 
 '/images/vehicles/camaro.jpg', '/images/vehicles/camaro-tn.jpg',
 38000, 12000, 'Red', 2),

('Ford', 'Escalade', '2022', 'Spacious SUV ideal for families.',
 '/images/vehicles/escalade.jpg', '/images/vehicles/escalade-tn.jpg',
 62000, 6000, 'Black', 3),

('GMC', 'Hummer', '2023', 'Electric truck with off-road power.',
 '/images/vehicles/hummer.jpg', '/images/vehicles/hummer-tn.jpg',
 97000, 250, 'Green', 4),

('Toyota', 'Model-T', '1927', 'A historic car for collectors.',
 '/images/vehicles/model-t.jpg', '/images/vehicles/model-t-tn.jpg',
 15000, 90000, 'Brown', 5),

('DC', 'Batmobile', '2022', 'Crime-fighting technology on wheels.',
 '/images/vehicles/batmobile.jpg', '/images/vehicles/batmobile-tn.jpg',
 999999, 100, 'Black', 1),

('DeLorean', 'DMC-12', '1985', 'Time-travel capable if flux capacitor is installed.',
 '/images/vehicles/delorean.jpg', '/images/vehicles/delorean-tn.jpg',
 85000, 88000, 'Silver', 2),

('Doggo', 'Dog-Car', '2021', 'The perfect car for pet lovers.',
 '/images/vehicles/dog-car.jpg', '/images/vehicles/dog-car-tn.jpg',
 24000, 20000, 'White', 3),

('Ford', 'Fire-Truck', '2018', 'A reliable truck for emergencies.',
 '/images/vehicles/fire-truck.jpg', '/images/vehicles/fire-truck-tn.jpg',
 70000, 5000, 'Red', 4),

('Jeep', 'Wrangler', '2023', 'Off-road vehicle built for adventure.',
 '/images/vehicles/wrangler.jpg', '/images/vehicles/wrangler-tn.jpg',
 46000, 1200, 'Blue', 5);


CREATE TABLE favorites (
  favorite_id SERIAL PRIMARY KEY,
  account_id INT NOT NULL REFERENCES account(account_id) ON DELETE CASCADE,
  inv_id INT NOT NULL REFERENCES inventory(inv_id) ON DELETE CASCADE,
  UNIQUE (account_id, inv_id)
);